# -*- coding: utf-8 -*-
"""Q2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e8-BrRaG6keQo-r70x8bfOo8WLputlpi
"""

import re
class User:
    def __init__(self, user_type, user_id, user_name, password):
        self.user_type = user_type
        self.user_id = user_id
        self.user_name = user_name
        self.password = password
        self.courses = []
class EducationSystem:
    def __init__(self):
        self.users = []
        self.courses = []
        self.current_user = None
        self.current_menu = 0
class Course:
    def __init__(self, course_id, course_name, capacity):
        self.course_id = course_id
        self.course_name = course_name
        self.capacity = capacity
        self.students_enrolled = 0
    def sign_up(self, u_t, user_id, user_name, password):
        if u_t in ['S', 'P'] and user_id.isdigit() and user_name.isalnum() and len(password) >= 4 and any(char in password for char in "*.!@$%^&()"):
            for user in self.users:
                if user.user_id == user_id:
                    print("id already exists")
                    return
            self.users.append(User(u_t, user_id, user_name, password))
            print("signed up successfully!")
        else:
            print("invalid type" if not u_t in ['S', 'P'] else
                  "invalid id" if not user_id.isdigit() else
                  "invalid name" if not user_name.isalnum() else
                  "invalid password")
    def log_in(self, user_id, password):
        for user in self.users:
            if user.user_id == user_id:
                if user.password == password:
                    self.current_user = user
                    print("logged in successfully!")
                    print(f"entered {'student' if user.u_t == 'S' else 'professor'} menu")
                    if user.u_t == 'S':
                        self.current_menu = 1
                    else:
                        self.current_menu = 2
                    return
                else:
                    print("incorrect password")
                    return
        print("incorrect id")
    def log_out(self):
        self.current_user = None
        self.current_menu = 0
        print("logged out successfully!")
        print("entered log in/sign up menu")

    def show_course_list(self):
        print("course list:")
        for course in self.courses:
            print(f"{course.course_id} {course.course_name} {course.students_enrolled}/{course.capacity}")

    def add_course(self, course_name, course_id, capacity):
        if course_name.isalnum() and course_id.isdigit() and capacity.isdigit():
            for course in self.courses:
                if course.course_id == course_id:
                    print("course id already exists")
                    return
            self.courses.append(Course(course_id, course_name, int(capacity)))
            print("course added successfully!")
        else:
            print("invalid course name" if not course_name.isalnum() else
                  "invalid course id" if not course_id.isdigit() else
                  "invalid course capacity")
    def get_course(self, course_id):
        if not any(course.course_id == course_id for course in self.courses):
            print("incorrect course id")
            return
        for course in self.courses:
            if course.course_id == course_id:
                if self.current_user.u_t == 'S':
                    if course_id in [c.course_id for c in self.current_user.courses]:
                        print("you already have this course")
                    elif course.students_enrolled >= course.capacity:
                        print("course is full")
                    else:
                        course.students_enrolled += 1
                        self.current_user.courses.append(course)
                        print("course added successfully!")
                elif self.current_user.u_t == 'P':
                    print("invalid command")
                    return
def mid(a,b,c):
    return re.sub(f"({a})|({b})","",re.search(f"{a}.*{b}",c).group())
def check(a):
    if len(a.split()) == 1:
        return True
    return False
def single_space(input_string):
    words = input_string.split()
    for word in words:
        if word != "":
            spaces_between = input_string.count(" " * (len(word) + 1))
            if spaces_between > 1:
                return False
    return True
def main():
    edu_system = EducationSystem()
    while True:
        command = input()
        command = command.strip()
        parts = command.split()
        sc = re.sub("edu","",command)
        if parts[0] == "edu" and len(parts) > 1 and parts[-1] == "edu" and single_space(command):
            command_type = parts[1]
            if command_type == "sign" and parts[2] == "up":
                if "-i" in parts and "-n" in parts and "-p" in parts:
                    u_t = mid("up","-i",command)
                    id = mid("-i","-n",command)
                    name = mid("-n","-p",command)
                    password = mid("-p","edu",command)
                    if check(u_t) and u_t.strip()[1] in ['S', 'P']:
                        u_t = u_t.strip()
                        if check(id) and id.strip().isdigit():
                            id = id.strip()
                            if check(name) and name.strip().isalnum():
                                name = name.strip()
                                if check(password):
                                    password=password.strip()
                                    edu_system.sign_up(u_t[1], id, name, password)
                                else:
                                    print("invalid password")
                            else:
                                print("invalid name")
                        else:
                            print("invalid id")
                    else:
                        print("invalid type")
                else:
                    print("invalid command")
            elif command_type == "log":
                if parts[2] == "in" and "-i" in parts and "-p" in parts:
                    id = mid("-i","-p",command)
                    password = mid("-p","edu",command)
                    if check(id) and id.strip().isdigit():
                        id = id.strip()
                        if check(password):
                            password=password.strip()
                            edu_system.log_in(id, password)
                        else:
                            print("incorrect password")
                    else:
                        print("incorrect id")
                elif parts[2] == "out":
                    if edu_system.current_menu != 0:
                        edu_system.log_out()
                    else:
                        print("invalid command")
                else:
                    print("invalid command")

            elif sc == " show course list ":
                if edu_system.current_menu != 0:
                    edu_system.show_course_list()
                else:
                    print("invalid command")
            elif command_type == "add":
                if edu_system.current_menu == 2:
                    if parts[2] == "course" and "-c" in parts and "-i" in parts and "-n" in parts and command.find("-n") > command.find("-i") > command.find("-c"):
                        name = mid("-c","-i",command)
                        id = mid("-i","-n",command)
                        capacity = mid("-n","edu",command)
                        if check(name) and name.strip().isalnum():
                            name = name.strip()
                            if check(id) and id.strip().isdigit():
                                id = id.strip()
                                if check(capacity):
                                    capacity=capacity.strip()
                                    edu_system.add_course(name, id, capacity)
                                else:
                                    print("invalid course capacity")
                            else:
                                print("invalid course id")
                        else:
                            print("invalid course name")
                    else:
                        print("invalid command")
                else:
                    print("invalid command")
            elif command_type == "get":
                if edu_system.current_menu == 1:
                    if parts[2] == "course" and "-i" in parts:
                        id = mid("-i","edu",command)
                        if check(id) and id.strip().isdigit():
                            id = id.strip()
                            edu_system.get_course(id)
                        else:
                            print("incorrect course id")
                    else:
                        print("invalid command")
                else:
                    print("invalid command")
            elif sc == " current menu ":
                if edu_system.current_user:
                    print(f"{'student' if edu_system.current_user.u_t == 'S' else 'professor'} menu")
                else:
                    print("log in/sign up menu")
            elif command_type == "exit" and parts[2] == "edu":
                break
            else:
                print("invalid command")
        else:
            print("invalid command")
if __name__ == "__main__":
    main()