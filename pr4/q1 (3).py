# -*- coding: utf-8 -*-
"""q1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qae81InDMn5k4x_eoTSzChiRhbxG9X5Y
"""

import numpy as np
f = open("input.txt", "r")
inp_Matrixs = []
def matrixs(m1, m2):
    m1 = np.array(m1).astype(float)
    m2 = np.array(m2).astype(float)
    return np.matmul(m1, m2)
def Determinant(M):
    return np.linalg.det(np.array(M).astype(float))
def mI(M):
    return np.linalg.inv(np.array(M))
def cr(v, d_p):
    return np.round(v, decimals = d_p)
def round_and_replace(array, d_p):
    array_rounded = np.round(array, decimals=d_p)
    for i in range(array.shape[0]):
        for j in range(array.shape[1]):
            array[i, j] = array_rounded[i, j]
l_C, M_C, N_M_C, f_l = 0, 0, 1, True
for line in f:
    if ''.join(filter(str.isdigit, line)):
        tepmData = line.replace("\n", "").split(" ")
        if f_l:
            f_l = False
            M_C = int(tepmData[1])
            for i in range(int(tepmData[0])):
                inp_Matrixs.append([])
        else:
            inp_Matrixs[l_C].append([float(x) for x in tepmData])
            if N_M_C != M_C:
                N_M_C += 1
            else:
                N_M_C = 1
                l_C += 1
bD = None
for matrix in range(len(inp_Matrixs)):
    for leftOverMatrixs in range(matrix + 1, len(inp_Matrixs)):
        tm = matrixs(inp_Matrixs[matrix], inp_Matrixs[leftOverMatrixs])
        td = float(Determinant(tm))
        if bD is None or td > float(bD["determinant"]):
            bD = {
                "determinant": td,
                "m1": inp_Matrixs[matrix],
                "m2": inp_Matrixs[leftOverMatrixs]
            }
if float(Determinant(bD["m1"])) > float(Determinant(bD["m2"])):
    finalMultip = matrixs(bD["m1"], bD["m2"])
elif float(Determinant(bD["m2"])) > float(Determinant(bD["m1"])):
    finalMultip = matrixs(bD["m2"], bD["m1"])
else:
    finalMultip = matrixs(bD["m1"], bD["m2"])
input_array = np.array(mI(finalMultip))
round_and_replace(input_array, 3)
for row in input_array:
    print(" ".join(map("{:.3f}".format, row)))