# -*- coding: utf-8 -*-
"""q2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kEZ5_HPodTm5i5w8V0iYzWNGLayYTqVj
"""

d = RoseDictionary()
d["mike"] = "report1"
print(d["mike"])
d["john"] = "report2"
class RoseDictionary:
    def init(s):
        s.entries = []
    def getitem(s, t_k):
        for s_k, value in s.entries:
            if s_k == t_k:
                return value
        raise KeyError('Value was not found and no default value/message was specified.')
    def setitem(s, n_k, n_v):
        for i, (s_k, _) in enumerate(s.entries):
            if s_k == n_k:
                s.entries[i] = (n_k, n_v)
                return
        s.entries.append((n_k, n_v))

    def pop_item(s, raise_error=True, default=None, error_msg='error_msg'):
        if not se.entries:
            if raise_error:
                if error_msg:
                    raise KeyError(error_msg)
                else:
                    raise KeyError('Dictionary was empty and no default value/message was specified.')
            else:
                return default
        else:
            p_k, p_v = s.entries.pop()
            return p_v
    def get_item(s, t_k, raise_error=True, default=None, error_msg='error_msg'):
        if raise_error:
            return s.getitem(t_k)
        elif not s.entries:
            return default
        else:
            for s_k, value in self.entries:
                if s_k == t_k:
                    return value
            return default
print(d.pop_item())
print(d.pop_item(raise_error=False, default="Default Value"))
print(d.get_item("mike",raise_error=False,default="Default Value"))
print(d.get_item("sam", raise_error=False, default="Not Found"))